/*
 * üöÄ CONFIGURACI√ìN POSTGRESQL - LISTO PARA USAR
 * 
 * ¬øQuieres conectar tu API a PostgreSQL? ¬°Perfecto! Solo sigue estos pasos:
 * 
 * 1Ô∏è‚É£ INSTALA: npm install @nestjs/typeorm typeorm pg
 * 2Ô∏è‚É£ RENOMBRA: este archivo a 'database-postgres.ts'
 * 3Ô∏è‚É£ CAMBIA: en app.module.ts la importaci√≥n a './database-postgres'
 * 4Ô∏è‚É£ ACTUALIZA: events.module.ts (ver instrucciones abajo)
 * 5Ô∏è‚É£ ¬°LISTO! El servicio ya est√° preparado para PostgreSQL
 * 
 * ¬°Y listo! Tu API usar√° PostgreSQL. Los datos se guardar√°n permanentemente.
 */

import { TypeOrmModuleOptions } from '@nestjs/typeorm';
import { Event } from './events/event.entity';

export const databaseConfig: TypeOrmModuleOptions = {
  type: 'postgres',
  host: 'localhost',
  port: 5432,
  username: 'postgres',
  password: 'password', // ‚ö†Ô∏è Cambia esta contrase√±a por la tuya
  database: 'statstracker',
  entities: [Event],
  synchronize: true, // Solo para desarrollo - crea tablas autom√°ticamente
  logging: true, // Muestra las consultas SQL en la consola
};

/*
 * üìã INSTRUCCIONES DETALLADAS PASO A PASO
 * 
 * PASO 4: Actualizar events.module.ts
 * Abre src/events/events.module.ts y c√°mbialo por esto:
 * 
 * ```typescript
 * import { Module } from '@nestjs/common';
 * import { TypeOrmModule } from '@nestjs/typeorm';
 * import { Event } from './event.entity';
 * import { EventsService } from './events.service';
 * import { EventsController } from './events.controller';
 * 
 * @Module({
 *   imports: [TypeOrmModule.forFeature([Event])],
 *   controllers: [EventsController],
 *   providers: [EventsService],
 *   exports: [EventsService],
 * })
 * export class EventsModule {}
 * ```
 * 
 * PASO 5: Actualizar events.service.ts (Opcional)
 * - Abre src/events/events.service.ts
 * - Reemplaza todo el c√≥digo con la versi√≥n comentada al final del archivo
 * - ¬°Y listo! Tu API usar√° PostgreSQL
 * 
 * PASO 6: Actualizar app.module.ts
 * Reemplaza TODO el contenido de src/app.module.ts por esto:
 * 
 * ```typescript
 * import { Module } from '@nestjs/common';
 * import { TypeOrmModule } from '@nestjs/typeorm';
 * import { databaseConfig } from './database-postgres';
 * import { EventsModule } from './events/events.module';
 * import { StatsModule } from './stats/stats.module';
 * 
 * @Module({
 *   imports: [
 *     TypeOrmModule.forRoot(databaseConfig),
 *     EventsModule,
 *     StatsModule,
 *   ],
 *   controllers: [],
 *   providers: [],
 * })
 * export class AppModule {}
 * ```
 */

/*
 * üîß CONFIGURACI√ìN OPCIONAL (.env)
 * 
 * Si quieres usar variables de entorno (recomendado), crea un archivo .env en la ra√≠z:
 * 
 * DB_HOST=localhost
 * DB_PORT=5432
 * DB_USERNAME=postgres
 * DB_PASSWORD=tu_password_aqui
 * DB_NAME=statstracker
 * 
 * Y cambia la configuraci√≥n de arriba por:
 * 
 * host: process.env.DB_HOST || 'localhost',
 * port: parseInt(process.env.DB_PORT) || 5432,
 * username: process.env.DB_USERNAME || 'postgres',
 * password: process.env.DB_PASSWORD || 'password',
 * database: process.env.DB_NAME || 'statstracker',
 */